version: '3'
services:

  db:
    image: mysql:latest
    container_name: db
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=1
      - MYSQL_DATABASE=fraud_detection_db
      - MYSQL_USER=fraud_detection_user
      - MYSQL_PASSWORD=${MYSQL_PASSWORD} # this should live in a env var
    volumes:
      - "./../db:/docker-entrypoint-initdb.d" # this is how we persist a sql db even when container stops
    ports:
      - "3306:3306"
      - "33060:33060"

  web:
    container_name: web
    depends_on:
      - db
    build:
      context: "."
      dockerfile: "dockerfile-web"
    ports:
      - "8080:8080"
    command: ['catalina.sh', 'run']
    volumes:
      - ./target/web-app.war:/usr/local/tomcat/webapps/web-app.war


#  zookeeper:
#    image: wurstmeister/zookeeper:latest
#    container_name: zookeeper
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#    ports:
#      - "2181:2181"
#
#  kafka-broker-1:
#    image: wurstmeister/kafka:latest
#    container_name: kafka-broker-1
#    ports:
#      - "9092:9092"
#    expose:
#      - "9093"
#    environment:
#      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka-broker-1:9093,OUTSIDE://localhost:9092
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
#      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
#      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
#      KAFKA_DELETE_TOPIC_ENABLE: "true"
#      KAFKA_BROKER_ID: 1
#      KAFKA_NUM_PARTITIONS: 2
#      KAFKA_DEFAULT_REPLICATION_FACTOR: 2
#      KAFKA_CREATE_TOPICS: "cars-data,violations,frauds"
#    depends_on:
#      - zookeeper
#      
#  kafka-broker-2:
#    image: wurstmeister/kafka:latest
#    container_name: kafka-broker-2
#    ports:
#      - "9094:9094"
#    expose:
#      - "9095"
#    environment:
#      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka-broker-2:9095,OUTSIDE://localhost:9094
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
#      KAFKA_LISTENERS: INSIDE://0.0.0.0:9095,OUTSIDE://0.0.0.0:9094
#      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
#      KAFKA_DELETE_TOPIC_ENABLE: "true"
#      KAFKA_BROKER_ID: 2
#      KAFKA_NUM_PARTITIONS: 2
#      KAFKA_DEFAULT_REPLICATION_FACTOR: 2
#      KAFKA_CREATE_TOPICS: "cars-data,violations,frauds"
#    depends_on:
#      - zookeeper
#      
#  jobmanager:
#    image: apache/flink:1.18-java17
#    container_name: flink-jobmanager
#    command:
#      - jobmanager
#      - flink run -d -c "it.unipi.dsmt.Main" job/fraud-detector-1.0-jar-with-dependencies.jar
#    ports:
#      - "8081:8081"  # Flink Web UI port
#    environment:
#      - JOB_MANAGER_RPC_ADDRESS=jobmanager
#    volumes:
#      - ./target/fraud-detector-1.0-jar-with-dependencies.jar:/opt/flink/job/fraud-detector-1.0-jar-with-dependencies.jar
#
#  taskmanager:
#    image: apache/flink:1.18.0-java17
#    container_name: flink-taskmanager
#    command: taskmanager
#    depends_on:
#      - jobmanager
#    environment:
#      - JOB_MANAGER_RPC_ADDRESS=jobmanager
